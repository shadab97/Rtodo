{"version":3,"sources":["img/bg-desktop-light.jpg","img/icon-sun.svg","img/icon-moon.svg","components/Header.js","img/icon-cross.svg","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","useState","day","setDay","className","src","sun","moon","alt","onClick","width","height","TodoList","filterState","todolist","useContext","todolistContext","todoa","map","todo","readonly","aria-label","disabled","completed","e","newtodolist","key","tdispatch","type","newarray","localStorage","setItem","JSON","stringify","changeCompleteStatus","active","changeActiveStatus","name","cross","filter","deletetodo","React","createContext","App","initialState","getItem","parse","useReducer","currentState","action","dispatch","setFilter","filtertodo","setfiltertodo","todoname","setTodoName","all","setall","setactive","setcompleted","filtertodolist","filterOption","item","submithandel","Math","floor","random","length","preventDefault","backgroundImg","onSubmit","required","placeholder","autoFocus","value","onChange","target","Provider","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3604d273.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React, { useState } from 'react'\r\nimport sun from '../img/icon-sun.svg'\r\nimport moon from '../img/icon-moon.svg'\r\nfunction Header({ title }) {\r\n    const [day, setDay] = useState(true);///for theme\r\n    return (\r\n        <div className=\"header\">\r\n            <h2 className=\"logo\">{title}</h2>\r\n            <img src={day ? sun : moon} alt=\"theme\"\r\n                onClick={() => setDay(!day)}\r\n                width=\"30px\" height=\"30px\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React, { useState, useContext } from 'react';\r\nimport { todolistContext } from \"../App\";\r\nimport cross from '../img/icon-cross.svg'\r\nfunction TodoList({ filterState }) {\r\n    const todolist = useContext(todolistContext);\r\n\r\n    const deletetodo = (e) => {\r\n        let newtodolist = todolist.todoa.filter(todo => {\r\n            if (todo.key !== e) {\r\n                return todo;\r\n            }\r\n        })\r\n        todolist.tdispatch({ type: \"remove\", newarray: newtodolist })\r\n        localStorage.setItem('todos', JSON.stringify([...newtodolist]));\r\n    }\r\n\r\n    const changeCompleteStatus = (e) => {\r\n        let newtodolist = todolist.todoa.map(todo => {\r\n            if (todo.key === e) {\r\n                todo.completed = !todo.completed;\r\n            }\r\n            return todo;\r\n        });\r\n        todolist.tdispatch({ type: \"completed\", newarray: newtodolist })\r\n        localStorage.setItem('todos', JSON.stringify([...newtodolist]));\r\n    }\r\n    const changeActiveStatus = (e) => {\r\n        let newtodolist = todolist.todoa.map(todo => {\r\n            if (todo.key === e) {\r\n                todo.active = !todo.active;\r\n            }\r\n            return todo;\r\n        });\r\n        todolist.tdispatch({ type: \"active\", newarray: newtodolist })\r\n        localStorage.setItem('todos', JSON.stringify([...newtodolist]));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {todolist.todoa.map((todo) => (\r\n                <div className=\"TodoList\" key={todo.key} readonly={filterState ? true : false}>\r\n                    <button aria-label=\"marked checked\" disabled={filterState ? true : false} className={`input-check ${todo.completed ? 'checked' : ''}`} onClick={() => changeCompleteStatus(todo.key)}>\r\n                    </button>\r\n                    <p onClick={() => !filterState ? changeActiveStatus(todo.key) : ''} className={`Form-input ${!todo.active ? \"strikethrouw\" : ''}`}>{todo.name}</p>\r\n                    <img src={cross} alt=\"\" className=\"delete\" onClick={() => !filterState ? deletetodo(todo.key) : ''} />\r\n                </div>\r\n            ))}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState, useReducer } from 'react'\nimport backgroundImg from './img/bg-desktop-light.jpg'\nimport './App.css';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\n\nexport const todolistContext = React.createContext()\nfunction App() {\n  let initialState;\n  if (localStorage.getItem('todos')) {\n    initialState = JSON.parse(localStorage.getItem('todos'))\n  } else {\n    initialState = [\n      {\n        \"name\": \"Complete online js course\",\n        \"completed\": true,\n        \"active\": true,\n        \"key\": 1\n\n      },\n      {\n        \"name\": \"making todo\",\n        \"completed\": true,\n        \"active\": false,\n        \"key\": 2\n\n      },\n      {\n        \"name\": \"Another React app\",\n        \"completed\": false,\n        \"active\": true,\n        \"key\": 3\n\n      }\n    ];\n  }\n  const reducer = (currentState, action) => {\n    switch (action.type) {\n      case 'remove':\n        return action.newarray;\n      case 'add':\n        return action.newarray;\n      case 'changename':\n        return action.newarray;\n      case 'completed':\n        return action.newarray;\n      case 'active':\n        return action.newarray;\n      default:\n        return currentState;\n\n    }\n  }\n  const [todo, dispatch] = useReducer(reducer, initialState);\n  const [day, night] = useState(1);///for theme\n  const [filter, setFilter] = useState(0);/// used to filter is clicked or not\n  const [filtertodo, setfiltertodo] = useState([]);///filter todolist\n  const [todoname, setTodoName] = useState(\"\"); /// todo name\n  const [all, setall] = useState(1);\n  const [active, setactive] = useState(0);\n  const [completed, setcompleted] = useState(0);\n\n  /// (filtertodolist) function takes argument as filteroption and filter todo array based on that\n  let filtertodolist = (filterOption) => {\n    return todo.filter(function (item) {\n      if (filterOption === \"active\" && item.active) {\n        return item;\n      }\n      if (filterOption === \"completed\" && item.completed) {\n        return item;\n      }\n      if (filterOption === \"clear\" && !item.completed) {\n        return item;\n      }\n    })\n  }\n\n  /// submit the form to add new aaray in list\n  const submithandel = (e) => {\n    let key = `${Math.floor(Math.random() * 1000 + todo.length + 1)}${todoname}`;\n    e.preventDefault();\n    dispatch({\n      type: \"add\", newarray: [...todo, {\n        \"name\": todoname,\n        \"completed\": false,\n        \"active\": true,\n        \"key\": key\n      }]\n    })\n    localStorage.setItem('todos', JSON.stringify([...todo, {\n      \"name\": todoname,\n      \"completed\": false,\n      \"active\": true,\n      \"key\": key\n    }]));\n    setTodoName(\"\");\n  }\n  return (\n    <div className=\"App\" >\n      <img src={backgroundImg} alt=\"\" width=\"100%\" height=\"200px\" />\n      <div className=\"App-container\">\n        <Header title=\"TODO\" />\n        <form className=\"Form\" onSubmit={submithandel}>\n          <button aria-label=\"Add new item\" type=\"submit\" className=\"input-check\"\n            onSubmit={submithandel}\n          ></button>\n          <input type=\"text\" required placeholder=\"create a new todo\" className=\"Form-input\" autoFocus value={todoname} onChange={function (e) { { setTodoName(e.target.value) } }} />\n        </form>\n        <div className=\"Todolist-wrapper\">\n          <todolistContext.Provider value={{ todoa: filter ? filtertodo : todo, tdispatch: dispatch }}>\n            <TodoList filterState={filter} />\n          </todolistContext.Provider>\n          <div className=\"TodoFooter\">\n            <p>{filter ? filtertodo.length : todo.length} items</p>\n            <div className=\"flex\">\n              <span onClick={() => {\n                setFilter(0);\n                setall(1);\n                setactive(0);\n                setcompleted(0);\n              }} className={all ? 'drak-text' : ''}>All</span>\n              <span onClick={() => {\n                setFilter(1);\n                setactive(1);\n                setall(0);\n                setcompleted(0);\n                setfiltertodo(filtertodolist(\"active\"))\n              }} className={active ? 'drak-text' : ''}>Active</span>\n              <span onClick={() => {\n                setFilter(1);\n                setcompleted(1);\n                setall(0);\n                setactive(0);\n                setfiltertodo(filtertodolist(\"completed\"))\n              }}\n                className={completed ? 'drak-text' : ''}>Completed</span>\n            </div>\n            <span onClick={() => {\n              setFilter(0);\n              dispatch({ type: \"completed\", newarray: filtertodolist(\"clear\") })\n              localStorage.setItem('todos', JSON.stringify([...filtertodolist(\"clear\")\n              ]));\n            }}>clear completed </span>\n          </div>\n          <p className=\"dragdropmsg\">Drag and drop to reorder the list</p>\n          <p className=\"credit\">Challenge by <a href=\"https://www.frontendmentor.io/challenges/todo-app-Su1_KokOW\" target=\"_blank\" rel=\"noopener noreferrer\">Frontend Mentor.</a> Coded by <a href=\"http://shadab97.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">Shadab Ali.</a></p>\n        </div >\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}